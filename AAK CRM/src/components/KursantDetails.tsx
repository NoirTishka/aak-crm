import ConfirmModal from "./ConfirmModal";
import { useState } from "react";
import { useKursantContext } from '../context/KursantContext';
import AddKursantForm from "./AddKursantForm";

export function KursantDetails() {
  const {
    selected,
    setSelected,
    loadKursants,
  } = useKursantContext();

  const today = new Date().toLocaleDateString('ru-RU');
  const [editModalOpen, setEditModalOpen] = useState(false);
  const [confirmDeleteOpen, setConfirmDeleteOpen] = useState(false);

  return (    
    <div className="w-full h-full">
      {!selected ? (
        <div className="w-full h-full bg-white rounded-2xl shadow-lg p-6 overflow-y-auto flex justify-center items-center">
          <div className="flex flex-col items-center text-center">
            <div className="text-3xl mb-2">–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å–∞–Ω—Ç–∞</div>
            <div className="text-gray-600 max-w-md">
              –í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å–∞–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            </div>
          </div>
        </div>
      ) : (
        <div className="w-full h-full bg-white rounded-2xl shadow-lg p-6 overflow-y-auto">
          {/* –í–µ—Ä—Ö: —Ñ–æ—Ç–æ + –§–ò–û */}
          <div className="flex items-center gap-4">
            <div className="w-20 h-20 rounded bg-gray-200 flex items-center justify-center text-2xl text-gray-500 font-bold">
              {selected.fio?.charAt(0)}
            </div>
            <div>
              <div className="text-lg font-semibold text-gray-800">{selected.fio}</div>
              <div className="text-sm text-gray-500">–ò–ò–ù: {selected.iin}</div>
              <div className="text-sm text-gray-500">–¢–µ–ª–µ—Ñ–æ–Ω: {selected.phone}</div>
            </div>
          </div>

          {/* –ò–Ω—Ñ–æ-–±–ª–æ–∫–∏ */}
          <div className="text-sm text-gray-700 space-y-1 mt-4">
            <div><span className="font-medium">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span> {selected.category}</div>
            <div><span className="font-medium">–ì—Ä—É–ø–ø–∞:</span> {selected.group}</div>
            <div><span className="font-medium">–ó–∞–ø–∏—Å–∞–Ω:</span> {today}</div>
            <div><span className="font-medium">–°—Ç–∞—Ä—Ç –≤ –ê–≤—Ç–æ–º–µ–∫—Ç–µ–ø:</span> {selected.avtomektep_start || "‚Äî"}</div>
            <div><span className="font-medium">–û–ø–ª–∞—Ç–∞:</span> <span className="font-bold">{selected.payment} ‚Ç∏</span></div>
            <div><span className="font-medium">–ö–Ω–∏–≥–∞:</span> {selected.bookBought ? "–í—ã–¥–∞–Ω–∞" : "–ù–µ –∫—É–ø–ª–µ–Ω–∞"}</div>
            <div>
              <span className="font-medium">–ú–∞—Ç–µ—Ä–∏–∞–ª—ã:</span>{" "}
              {[selected.materials?.video && "–í–∏–¥–µ–æ—É—Ä–æ–∫–∏", selected.materials?.tests && "–¢–µ—Å—Ç—ã", selected.materials?.autodrome && "–ê–≤—Ç–æ–¥—Ä–æ–º"]
                .filter(Boolean)
                .join(", ") || "–ù–µ—Ç"}
            </div>
            <div><span className="font-medium">–ü—Ä–∞–∫—Ç–∏–∫–∞:</span> {selected.practice?.taken ? `${selected.practice.count} –∑–∞–Ω—è—Ç–∏–π` : "–ù–µ –±–µ—Ä—ë—Ç"}</div>
          </div>

          {/* –î–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º */}
          <div className="border-t pt-4 mt-4 space-y-1 text-sm text-gray-700">
            <div className="font-semibold">–î–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º:</div>
            <div>–í–∏–¥–µ–æ-—É—Ä–æ–∫–∏: {selected.access?.video?.open ? "–û—Ç–∫—Ä—ã—Ç" : "–ó–∞–∫—Ä—ã—Ç"} {selected.access?.video?.until && `–¥–æ ${selected.access.video.until}`}</div>
            <div>–¢–µ—Å—Ç—ã: {selected.access?.tests?.open ? "–û—Ç–∫—Ä—ã—Ç" : "–ó–∞–∫—Ä—ã—Ç"} {selected.access?.tests?.until && `–¥–æ ${selected.access.tests.until}`}</div>
            <div>–ê–≤—Ç–æ–¥—Ä–æ–º: {selected.access?.autodrome?.open ? "–û—Ç–∫—Ä—ã—Ç" : "–ó–∞–∫—Ä—ã—Ç"} {selected.access?.autodrome?.until && `–¥–æ ${selected.access.autodrome.until}`}</div>
          </div>

          {/* –í–Ω—É—Ç—Ä–∏—à–∫–æ–ª—å–Ω—ã–π —ç–∫–∑–∞–º–µ–Ω */}
          <div className="border-t pt-4 mt-4">
            <div className="text-sm font-semibold">–í–Ω—É—Ç—Ä–∏—à–∫–æ–ª—å–Ω—ã–π —ç–∫–∑–∞–º–µ–Ω:</div>
            <div className={`text-sm ${selected.examPassed ? "text-green-600" : "text-red-600"}`}>
              {selected.examPassed ? "–°–¥–∞–Ω" : "–ù–µ —Å–¥–∞–Ω"}
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ */}
          <div className="flex justify-end gap-3 mt-4">
            <button
              onClick={() => setEditModalOpen(true)}
              className="!bg-[#0066ff] hover:!bg-[#0052cc] text-white px-4 py-1 !rounded-xl flex items-center gap-2"
            >
              ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            </button>
            <button
              onClick={() => setConfirmDeleteOpen(true)}
              className="!bg-[#ff3b3b] hover:!bg-[#cc2e2e] text-white px-4 py-1 !rounded-xl flex items-center gap-2"
            >
              üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
            </button>
          </div>

          {editModalOpen && selected && (
            <div className="fixed inset-0 backdrop-blur-sm bg-black/10 flex items-center justify-center z-50">
              <AddKursantForm
                initialData={selected}
                editMode={true}
                onClose={() => setEditModalOpen(false)}
                onUpdated={async () => {
                  setEditModalOpen(false);
                  const all = await loadKursants();
                  const updated = all.find(k => k.id === selected.id);
                  if (updated) setSelected(updated);
                }}
              />
            </div>
          )}

          {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è */}
          {confirmDeleteOpen && (
            <ConfirmModal
              message={`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å–∞–Ω—Ç–∞ ${selected.fio}?`}
              onConfirm={async () => {
                if (!selected?.id) return;
                await window.api.deleteKursant(selected.id);
                setSelected(null);
                loadKursants();
                setConfirmDeleteOpen(false);
              }}
              onCancel={() => setConfirmDeleteOpen(false)}
            />
          )}
        </div>
      )}
    </div>
  );
}
